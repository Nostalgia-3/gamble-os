allocation total_allocs[3000];

struct allocation {
    u32 start;
    u32 len;
    allocation *next; // this will be a null pointer at the end
    u32 in_use;
};

void *get_continuous_pages(u32 page_count) {
    ... // Hell is contained here
}

void *malloc(u32 size) {
    allocation *alloc = start_alloc;

    u32 pages = size / PAGE_SIZE;
    if(size % PAGE_SIZE) pages++;

    while(alloc->next != NULL) {
        alloc = alloc->next;
    }

    void *pages = get_continuous_pages(pages);
    alloc->next = get_first_free_alloc();
    alloc->next->start  = pages;
    alloc->next->size   = size;
    alloc->next->in_use = 1;
}

void free(void *addr) {
    if(addr == NULL) return;

    allocation *alloc = start_alloc;

    if(alloc->start == addr) {
        alloc->in_use = 0;
        alloc->next = NULL;
        return;
    }

    while(alloc->next != NULL) {
        alloc = alloc->next;
    }

    void *pages = get_continuous_pages(pages);
    alloc->next = get_first_free_alloc();
    alloc->next->start  = pages;
    alloc->next->size   = size;
    alloc->next->in_use = 1;
}